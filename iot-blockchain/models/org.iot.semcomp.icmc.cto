/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.iot.semcomp.icmc


enum TipoAnimal{
  o OVELHA
  o VACA
  o PORCO
  o FRANGO
}

enum MovimentoStatus{
  o NA_FAZENDA  /** no campo */
  o EM_TRANSITO /** Sendo transportado */
}

enum TipoProducao{
  o CARNE
  o LA /** LÃ£ */
  o LEITE 
  o REPRODUCAO
  o OUTRA
}

/** Participantes */

abstract participant User identified by cpf {
  o String cpf
  o String nome
  o String sobrenome
  o String email
}

participant Fazendeiro extends User{
  o String endereco1
  o String endereco2
  o String pais
  o String cep
  --> Business business optional /** tipo do negocio */
}

participant Regulador extends User {

}

/** Ativos */

asset Business identified by sbi{
  o String sbi /** Single Business Identifier */
  o String endereco1
  o String endereco2
  o String pais
  o String cep
  --> Fazendeiro proprietario
  --> Animal[] animais optional
}

asset Fazenda identified by fazendaId {
  o String fazendaId
  o String nome
  --> Business business
}

asset Animal identified by animalId {
  o String animalId
  o TipoAnimal especie
  o MovimentoStatus movStatus
  o TipoProducao tipoProducao
  --> Fazenda localizacao optional
  --> Fazendeiro proprietario
}

asset Container identified by containerId{
  o String containerId
  o String geoCode
  o Double temperatura
  o Boolean status
  --> Animal[] animais optional
}

abstract transaction AnimalMovimento{
  --> Animal animal
  --> Business from
  --> Business to
}

/** Saida dos animais para outra fazenda */
transaction PartidaDoAnimal extends AnimalMovimento{
  --> Fazenda fromFazenda
  --> Container container
}

/** Entrada de animais de outra fazenda */
transaction ChegadaDoAnimal extends AnimalMovimento{
  --> Fazenda chegadaFazenda 
}

transaction LerStatusContainer{
  o String[] logs optional
  o Double temperatura
  o String geoCode
   --> Container container
}

event ContainerStatus {
  o String message
  o String geoCode
  o Double temperatura
}

transaction SetupDemo {
  o String detail
}


